import { render, screen, fireEvent, waitFor } from '@testing-library/react';
import AlbumCard from '../AlbumCard';

// Mock framer-motion
jest.mock('framer-motion', () => ({
  motion: {
    div: ({ children, ...props }) => <div {...props}>{children}</div>
  }
}));

describe('AlbumCard', () => {
  const mockAlbum = {
    id: 'album_1',
    title: 'Ê∏¨Ë©¶Áõ∏Á∞ø',
    description: 'ÈÄôÊòØ‰∏ÄÂÄãÊ∏¨Ë©¶Áõ∏Á∞øÁöÑÊèèËø∞',
    photoCount: 25,
    coverPhotoUrl: 'https://example.com/cover.jpg',
    createdAt: '2023-01-15T10:00:00Z',
    updatedAt: '2023-01-20T15:30:00Z',
    isShared: true,
    privacy: 'public',
    url: 'https://example.com/album/1',
    metadata: { platform: 'facebook' }
  };

  const defaultProps = {
    album: mockAlbum,
    isSelected: false,
    onSelect: jest.fn(),
    onPreview: jest.fn(),
    showStats: true
  };

  beforeEach(() => {
    jest.clearAllMocks();
  });

  describe('Ê∏≤Êüì', () => {
    it('ÊáâË©≤Ê≠£Á¢∫Ê∏≤ÊüìÁõ∏Á∞øË≥áË®ä', () => {
      render(<AlbumCard {...defaultProps} />);

      expect(screen.getByText('Ê∏¨Ë©¶Áõ∏Á∞ø')).toBeInTheDocument();
      expect(screen.getByText('ÈÄôÊòØ‰∏ÄÂÄãÊ∏¨Ë©¶Áõ∏Á∞øÁöÑÊèèËø∞')).toBeInTheDocument();
      expect(screen.getByText('25 ÂºµÁÖßÁâá')).toBeInTheDocument();
      expect(screen.getByText('FACEBOOK')).toBeInTheDocument();
    });

    it('ÊáâË©≤È°ØÁ§∫Ê≠£Á¢∫ÁöÑÊó•ÊúüÊ†ºÂºè', () => {
      render(<AlbumCard {...defaultProps} />);

      expect(screen.getByText(/2023Âπ¥1Êúà15Êó•/)).toBeInTheDocument();
    });

    it('ÊáâË©≤È°ØÁ§∫Âπ≥Âè∞Ê®ôÁ´†', () => {
      render(<AlbumCard {...defaultProps} />);

      const platformBadge = screen.getByText('FACEBOOK');
      expect(platformBadge).toBeInTheDocument();
      expect(platformBadge.previousSibling?.textContent).toBe('üìò');
    });

    it('ÊáâË©≤È°ØÁ§∫ÂàÜ‰∫´ÁãÄÊÖãÂúñÊ®ô', () => {
      render(<AlbumCard {...defaultProps} />);

      // Ê™¢Êü•ÊòØÂê¶ÊúâÂàÜ‰∫´ÂúñÊ®ô
      const sharedIcon = screen.getByTestId('users-icon') || 
                        document.querySelector('[data-lucide="users"]');
      expect(sharedIcon).toBeInTheDocument();
    });

    it('ÈÅ∏‰∏≠ÁãÄÊÖãÊáâË©≤È°ØÁ§∫‰∏çÂêåÊ®£Âºè', () => {
      const { rerender } = render(<AlbumCard {...defaultProps} />);
      
      const card = screen.getByText('Ê∏¨Ë©¶Áõ∏Á∞ø').closest('div');
      expect(card).not.toHaveClass('ring-2', 'ring-blue-500');

      rerender(<AlbumCard {...defaultProps} isSelected={true} />);
      expect(card).toHaveClass('ring-2', 'ring-blue-500');
    });
  });

  describe('Áî®Êà∂‰∫§‰∫í', () => {
    it('ÈªûÊìäÈÅ∏ÊìáÊåâÈàïÊáâË©≤Ë™øÁî® onSelect', () => {
      render(<AlbumCard {...defaultProps} />);

      const selectButton = screen.getByText('ÈÅ∏Êìá');
      fireEvent.click(selectButton);

      expect(defaultProps.onSelect).toHaveBeenCalledWith(mockAlbum);
    });

    it('ÈªûÊìäÈ†êË¶ΩÊåâÈàïÊáâË©≤Ë™øÁî® onPreview', () => {
      render(<AlbumCard {...defaultProps} />);

      const previewButton = screen.getByText('È†êË¶ΩÂÖßÂÆπ');
      fireEvent.click(previewButton);

      expect(defaultProps.onPreview).toHaveBeenCalledWith(mockAlbum);
    });

    it('ÈªûÊìäÂ∞ÅÈù¢ÂúñÁâáÊáâË©≤Ë™øÁî® onPreview', () => {
      render(<AlbumCard {...defaultProps} />);

      const coverImage = screen.getByAltText('Ê∏¨Ë©¶Áõ∏Á∞ø');
      fireEvent.click(coverImage);

      expect(defaultProps.onPreview).toHaveBeenCalledWith(mockAlbum);
    });

    it('ÈªûÊìäÂ§ñÈÉ®ÈÄ£ÁµêÊáâË©≤‰∏çË™øÁî®ÂÖ∂‰ªñÂõûË™ø', () => {
      render(<AlbumCard {...defaultProps} />);

      const externalLink = screen.getByTitle('Âú®ÂéüÂπ≥Âè∞Êü•Áúã');
      fireEvent.click(externalLink);

      expect(defaultProps.onSelect).not.toHaveBeenCalled();
      expect(defaultProps.onPreview).not.toHaveBeenCalled();
    });
  });

  describe('ÂúñÁâáËôïÁêÜ', () => {
    it('ÂúñÁâáËºâÂÖ•Â§±ÊïóÊôÇÊáâË©≤È°ØÁ§∫È†êË®≠ÂúñÊ®ô', async () => {
      render(<AlbumCard {...defaultProps} />);

      const image = screen.getByAltText('Ê∏¨Ë©¶Áõ∏Á∞ø');
      fireEvent.error(image);

      await waitFor(() => {
        expect(screen.getByTestId('image-icon') || 
               document.querySelector('[data-lucide="image"]')).toBeInTheDocument();
      });
    });

    it('Ê≤íÊúâÂ∞ÅÈù¢ÂúñÁâáÊôÇÊáâË©≤È°ØÁ§∫È†êË®≠ÂúñÊ®ô', () => {
      const albumWithoutCover = { ...mockAlbum, coverPhotoUrl: null };
      render(<AlbumCard {...defaultProps} album={albumWithoutCover} />);

      expect(screen.getByTestId('image-icon') || 
             document.querySelector('[data-lucide="image"]')).toBeInTheDocument();
    });
  });

  describe('ÈÇäÁ∑£ÊÉÖÊ≥Å', () => {
    it('ÊáâË©≤ËôïÁêÜÁº∫Â∞ëÊ®ôÈ°åÁöÑÁõ∏Á∞ø', () => {
      const albumWithoutTitle = { ...mockAlbum, title: null };
      render(<AlbumCard {...defaultProps} album={albumWithoutTitle} />);

      expect(screen.getByText('Êú™ÂëΩÂêçÁõ∏Á∞ø')).toBeInTheDocument();
    });

    it('ÊáâË©≤ËôïÁêÜÁº∫Â∞ëÊèèËø∞ÁöÑÁõ∏Á∞ø', () => {
      const albumWithoutDescription = { ...mockAlbum, description: null };
      render(<AlbumCard {...defaultProps} album={albumWithoutDescription} />);

      expect(screen.queryByText('ÈÄôÊòØ‰∏ÄÂÄãÊ∏¨Ë©¶Áõ∏Á∞øÁöÑÊèèËø∞')).not.toBeInTheDocument();
    });

    it('ÊáâË©≤ËôïÁêÜÁº∫Â∞ëÁÖßÁâáÊï∏ÈáèÁöÑÁõ∏Á∞ø', () => {
      const albumWithoutPhotoCount = { ...mockAlbum, photoCount: null };
      render(<AlbumCard {...defaultProps} album={albumWithoutPhotoCount} />);

      expect(screen.getByText('0 ÂºµÁÖßÁâá')).toBeInTheDocument();
    });

    it('ÊáâË©≤ËôïÁêÜÊú™Áü•Âπ≥Âè∞', () => {
      const albumWithUnknownPlatform = { 
        ...mockAlbum, 
        metadata: { platform: 'unknown' } 
      };
      render(<AlbumCard {...defaultProps} album={albumWithUnknownPlatform} />);

      expect(screen.getByText('üìÅ')).toBeInTheDocument();
      expect(screen.getByText('UNKNOWN')).toBeInTheDocument();
    });
  });

  describe('ÂèØÈÅ∏ÂäüËÉΩ', () => {
    it('showStats ÁÇ∫ false ÊôÇ‰∏çÊáâË©≤È°ØÁ§∫Áµ±Ë®àË≥áË®ä', () => {
      render(<AlbumCard {...defaultProps} showStats={false} />);

      expect(screen.queryByText('25 ÂºµÁÖßÁâá')).not.toBeInTheDocument();
      expect(screen.queryByText(/2023Âπ¥1Êúà15Êó•/)).not.toBeInTheDocument();
    });

    it('ÊáâË©≤ÊîØÊè¥Ëá™ÂÆöÁæ© className', () => {
      render(<AlbumCard {...defaultProps} className="custom-class" />);

      const card = screen.getByText('Ê∏¨Ë©¶Áõ∏Á∞ø').closest('div');
      expect(card).toHaveClass('custom-class');
    });

    it('Â∑≤ÈÅ∏ÊìáÁãÄÊÖãÊáâË©≤È°ØÁ§∫Ê≠£Á¢∫ÁöÑÊåâÈàïÊñáÂ≠ó', () => {
      render(<AlbumCard {...defaultProps} isSelected={true} />);

      expect(screen.getByText('Â∑≤ÈÅ∏Êìá')).toBeInTheDocument();
      expect(screen.queryByText('ÈÅ∏Êìá')).not.toBeInTheDocument();
    });
  });

  describe('Èö±ÁßÅË®≠ÂÆö', () => {
    it('ÁßÅ‰∫∫Áõ∏Á∞øÊáâË©≤È°ØÁ§∫ÈéñÂÆöÂúñÊ®ô', () => {
      const privateAlbum = { ...mockAlbum, privacy: 'private' };
      render(<AlbumCard {...defaultProps} album={privateAlbum} />);

      expect(screen.getByTestId('lock-icon') || 
             document.querySelector('[data-lucide="lock"]')).toBeInTheDocument();
    });

    it('ÂÖ¨ÈñãÁõ∏Á∞ø‰∏çÊáâË©≤È°ØÁ§∫ÈéñÂÆöÂúñÊ®ô', () => {
      render(<AlbumCard {...defaultProps} />);

      expect(screen.queryByTestId('lock-icon')).not.toBeInTheDocument();
    });
  });

  describe('ÂèØË®™ÂïèÊÄß', () => {
    it('ÂúñÁâáÊáâË©≤ÊúâÈÅ©Áï∂ÁöÑ alt ÊñáÂ≠ó', () => {
      render(<AlbumCard {...defaultProps} />);

      expect(screen.getByAltText('Ê∏¨Ë©¶Áõ∏Á∞ø')).toBeInTheDocument();
    });

    it('ÊåâÈàïÊáâË©≤ÊúâÈÅ©Áï∂ÁöÑÊñáÂ≠ó', () => {
      render(<AlbumCard {...defaultProps} />);

      expect(screen.getByRole('button', { name: 'ÈÅ∏Êìá' })).toBeInTheDocument();
      expect(screen.getByRole('button', { name: 'È†êË¶ΩÂÖßÂÆπ' })).toBeInTheDocument();
    });

    it('Â§ñÈÉ®ÈÄ£ÁµêÊáâË©≤ÊúâÈÅ©Áï∂ÁöÑ title', () => {
      render(<AlbumCard {...defaultProps} />);

      expect(screen.getByTitle('Âú®ÂéüÂπ≥Âè∞Êü•Áúã')).toBeInTheDocument();
    });
  });
});